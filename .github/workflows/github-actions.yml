name: Chronos API

on: 
    push:
    pull_request:
        branches: 
            - main

jobs:

    test:

        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: ./chronos_backend_app
        
        env:
            DATABASE_PORT: 5432
            DATABASE_DIALECT: postgres
            DATABASE_HOST: localhost
            DATABASE_TEST_NAME: chronos_database_test
            DATABASE_USERNAME: postgres
            DATABASE_PASSWORD: postgres
            JWT_KEY_ADMIN: secret_key_admin
            JWT_KEY_PLAYER: secret_key_player
        
        services:
            postgres:
                image: postgres:latest
                options: >-
                    --health-cmd="pg_isready -U postgres"
                    --health-timeout=5s
                    --health-start-period=10s
                    --health-interval=5s
                ports:
                    - 5432:5432
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres

        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

            - name: Install dependencies
              run: npm install

            - name: Set up a test database
              run: PGPASSWORD=postgres psql -h localhost -U postgres -a -f "./sql/database_test_creation.sql"

            - name: Insert data into the test database
              run: PGPASSWORD=postgres psql -h localhost -U postgres -a -f "./sql/seed.sql"

            - name: Run test e2e
              run: npm run test:e2e
    
    build:
         
        runs-on: ubuntu-latest

        # if: github.ref == 'refs/heads/main'

        needs: test

        defaults:
            run:
                working-directory: ./chronos_backend_app


        steps:
            - name: Checkout source code
              uses: actions/checkout@v4
            
            - name: Install dependencies
              run: npm install --production

            - name: Build project
              run: npm run build

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Build Docker image
              env:
                API_PORT: 3000
                DATABASE_PORT: 5432
                DATABASE_DIALECT: postgres
                DATABASE_HOST: chronos_database
                DATABASE_NAME: chronos_database
                DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
                DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
                JWT_KEY_ADMIN: ${{ secrets.JWT_KEY_ADMIN }}
                JWT_KEY_PLAYER: ${{ secrets.JWT_KEY_PLAYER }}
              run: |
                TAG=${{ github.sha }}
                docker build \
                    --build-arg API_PORT=3000 \
                    --build-arg DATABASE_PORT=5432 \
                    --build-arg DATABASE_DIALECT=postgres \
                    --build-arg DATABASE_HOST=chronos_database \
                    --build-arg DATABASE_NAME=chronos_database \
                    --build-arg DATABASE_USERNAME=postgres \
                    --build-arg DATABASE_PASSWORD=root \
                    --build-arg JWT_KEY_ADMIN=${JWT_KEY_ADMIN} \
                    --build-arg JWT_KEY_PLAYER=${JWT_KEY_PLAYER} \
                    -t ${{ secrets.DOCKER_USERNAME }}/chronos_api:$TAG -f dockerfile.prod .
                docker tag ${{ secrets.DOCKER_USERNAME }}/chronos_api:$TAG ${{ secrets.DOCKER_USERNAME }}/chronos_api:latest
            
            - name: Push Docker image
              run: |
                docker push ${{ secrets.DOCKER_USERNAME }}/chronos_api:$TAG
                docker push ${{ secrets.DOCKER_USERNAME }}/chronos_api:latest

